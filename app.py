
import yfinance as yf
import pandas as pd
import streamlit as st
import matplotlib.pyplot as plt
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ (XAU/USD) ‡∏£‡∏≤‡∏¢‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
data = yf.download("XAUUSD=X", interval="60m", period="30d")
data.dropna(inplace=True)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Machine Learning
data['Return'] = data['Close'].pct_change()
data['High_Low'] = data['High'] - data['Low']
data['Open_Close'] = data['Close'] - data['Open']
data['Target'] = (data['Close'].shift(-1) > data['Close']).astype(int)
data.dropna(inplace=True)

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
X = data[['Return', 'High_Low', 'Open_Close']]
y = data['Target']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å
model = XGBClassifier()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)

# ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏ó‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
latest = X.tail(1)
prediction = model.predict(latest)[0]

# === Streamlit Dashboard ===
st.set_page_config(page_title="Gold Price ML Dashboard", layout="centered")
st.title("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏î‡πâ‡∏ß‡∏¢ Machine Learning")

st.subheader("üîÆ ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ó‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:")
st.success("‡∏Ç‡∏∂‡πâ‡∏ô ‚¨ÜÔ∏è" if prediction == 1 else "‡∏•‡∏á ‚¨áÔ∏è")

st.metric(label="üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•", value=f"{round(accuracy * 100, 2)} %")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
st.subheader("üìà ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (100 ‡πÅ‡∏ó‡πà‡∏á)")
fig, ax = plt.subplots(figsize=(10, 4))
ax.plot(data['Close'][-100:], label='‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ (XAU/USD)', color='gold')
ax.set_title('‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á')
ax.set_xlabel('‡πÄ‡∏ß‡∏•‡∏≤')
ax.set_ylabel('‡∏£‡∏≤‡∏Ñ‡∏≤')
ax.grid(True)
st.pyplot(fig)
